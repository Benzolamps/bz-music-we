{"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"wrap":0,"brighten":1,"wave_a":0.001,"zoom":0.96,"rot":-18.84024,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":0.9,"ob_g":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_g":0.3,"mv_b":0.2,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"additive":1,"r":0,"g":0,"b":0},"init_eqs_str":"a.xpos=0;a.explode_time=0;a.ypos=0;a.explode=0;a.state=0;a.size=0;a.q2=0;a.q3=0;a.timestart=0;a.fire=0;a.time_delta=2;","frame_eqs_str":"","point_eqs_str":"a.fire=above(a.q3,3);a.explode_time=1.5;a.state=.00001<Math.abs(below(a.timestart+a.explode_time-a.time*a.fire,0))?0:1;a.timestart=.00001<Math.abs(below(a.timestart+a.explode_time-a.time*a.fire,0))?a.time:a.timestart;a.xpos=.00001<Math.abs(equal(a.state,0))?.5+.3*Math.sin(randint(1E3)):a.xpos;a.ypos=.00001<Math.abs(equal(a.state,0))?.5+.3*Math.sin(randint(1E3)):a.ypos;a.explode=.00001<Math.abs(equal(a.state,0))?1e-7*randint(100):a.explode;a.size=.00001<Math.abs(equal(a.state,\n1))?a.size+.00001+a.explode:0;a.x=a.xpos+a.size*Math.cos(10*a.sample);a.y=a.ypos+a.size*Math.sin(10*a.sample);a.r=.5+.5*Math.sin(1.2*a.q2+a.x+a.x);a.g=.5+.5*Math.sin(1.5*a.q2+a.x+a.y);a.b=.5+.5*Math.sin(1.36*a.q2+a.y+a.y);","init_eqs_eel":"time_delta = 2;","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 3);\n\nexplode_time = 1.5;\n\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\n\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\n\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\n\n\nx =  xpos  + size*cos(sample*10);\ny =  ypos  + size*sin(sample*10);\n\nr = 0.5 + 0.5*sin(q2*1.2 + x + x);\ng = 0.5 + 0.5*sin(q2*1.5 + x + y);\nb = 0.5 + 0.5*sin(q2*1.36 + y + y);"},{"baseVals":{"enabled":1,"spectrum":1,"additive":1},"init_eqs_str":"a.xpos=0;a.explode_time=0;a.ypos=0;a.explode=0;a.state=0;a.size=0;a.q2=0;a.q3=0;a.timestart=0;a.fire=0;","frame_eqs_str":"","point_eqs_str":"a.fire=above(a.q3,2.9);a.explode_time=1;a.state=.00001<Math.abs(below(a.timestart+a.explode_time-a.time*a.fire,0))?0:1;a.timestart=.00001<Math.abs(below(a.timestart+a.explode_time-a.time*a.fire,0))?a.time:a.timestart;a.xpos=.00001<Math.abs(equal(a.state,0))?.5+.3*Math.sin(randint(1E3)):a.xpos;a.ypos=.00001<Math.abs(equal(a.state,0))?.5+.3*Math.sin(randint(1E3)):a.ypos;a.explode=.00001<Math.abs(equal(a.state,0))?1e-7*randint(100):a.explode;a.size=.00001<Math.abs(equal(a.state,\n1))?a.size+.00001+a.explode:0;a.x=a.xpos+a.size*Math.cos(10*a.sample);a.y=a.ypos+a.size*Math.sin(10*a.sample);a.r=.5+.5*Math.sin(1.24*a.q2+a.x+a.x);a.g=.5+.5*Math.sin(1.35*a.q2+a.x+a.y);a.b=.5+.5*Math.sin(1.4666*a.q2+a.y+a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 2.9);\n\nexplode_time = 1;\n\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\n\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\n\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\n\n\nx =  xpos  + size*cos(sample*10);\ny =  ypos  + size*sin(sample*10);\n\nr = 0.5 + 0.5*sin(q2*1.24 + x + x);\ng = 0.5 + 0.5*sin(q2*1.35 + x + y);\nb = 0.5 + 0.5*sin(q2*1.4666 + y + y);"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_str":"a.xpos=0;a.explode_time=0;a.ypos=0;a.explode=0;a.state=0;a.size=0;a.q2=0;a.q3=0;a.timestart=0;a.fire=0;","frame_eqs_str":"","point_eqs_str":"a.fire=above(a.q3,1.5);a.explode_time=1;a.state=.00001<Math.abs(below(a.timestart+a.explode_time-a.time*a.fire,0))?0:1;a.timestart=.00001<Math.abs(below(a.timestart+a.explode_time-a.time*a.fire,0))?a.time:a.timestart;a.xpos=.00001<Math.abs(equal(a.state,0))?.5+.3*Math.sin(randint(1E3)):a.xpos;a.ypos=.00001<Math.abs(equal(a.state,0))?.5+.3*Math.sin(randint(1E3)):a.ypos;a.explode=.00001<Math.abs(equal(a.state,0))?1e-7*randint(100):a.explode;a.size=.00001<Math.abs(equal(a.state,\n1))?a.size+.00001+a.explode:0;a.x=a.xpos+a.size*Math.cos(10*a.sample);a.y=a.ypos+a.size*Math.sin(10*a.sample);a.r=.5+.5*Math.sin(1.14*a.q2+a.x+a.x);a.g=.5+.5*Math.sin(1.55*a.q2+a.x+a.y);a.b=.5+.5*Math.sin(1.7666*a.q2+a.y+a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 1.5);\n\nexplode_time = 1;\n\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\n\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\n\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\n\n\nx =  xpos  + size*cos(sample*10);\ny =  ypos  + size*sin(sample*10);\n\nr = 0.5 + 0.5*sin(q2*1.14 + x + x);\ng = 0.5 + 0.5*sin(q2*1.55 + x + y);\nb = 0.5 + 0.5*sin(q2*1.7666 + y + y);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.volavg2=0;a.q1=0;a.q9=0;a.sample1=0;a.difftime=0;a.diff=0;a.edge=0;a.volavg=0;a.bit2=0;a.vol=0;a.q2=0;a.q3=0;a.basssum=0;a.sample2=0;a.state=0;","frame_eqs_str":"a.basstime+=.06*a.bass;a.q1=a.basstime;a.q9=.000005*a.basstime;a.basstime=.00001<Math.abs(below(a.basstime,1E3))?1E3:a.basstime;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=\na.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime+=.03*a.diff;a.q2=a.difftime;a.difftime=.00001<Math.abs(above(a.difftime,2E3))?0:a.difftime;","pixel_eqs_str":"a.zoom=.98;a.rot=0;","init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\nq1 = basstime;\n\nq9 = basstime * 0.000005;\n\nbasstime = if(below(basstime,1000),1000,basstime);\n\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;\n\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\n//circle 1","pixel_eqs_eel":"zoom = 0.98;\nrot = 0;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  tmpvar_1.xyz = (texture (sampler_main, ((\n    ((((tmpvar_2 * \n      (0.97 + (rad * 0.02))\n    ) + 0.5) + ((\n      (texture (sampler_blur1, ((tmpvar_2 * 0.9) + 0.5)).xyz * scale1)\n     + bias1) * 0.1).xy) - 0.5)\n   * 0.98) + 0.5)).xyz - 0.002);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 2.0);\n  ret = tmpvar_1.xyz;\n }"}